name: branch main
on: 
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      versao: ${{ steps.docker_build.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}
      
      - uses: actions/cache@v4
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: npm-cache-dir-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm install
  
      - name: Run tests
        run: npm test

      - name: Build app
        run: npm run build
      
      - name: Build Docker image
        run: |
          TAG=$(date +'%Y-%m-%d-%H-%M-%S')
          echo "tag=${TAG}" >> "$GITHUB_OUTPUT"
        id: docker_build

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: averaacademy
          password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: averaacademy/github-actions-site:${{ steps.docker_build.outputs.tag }}
  
        
  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition-arn: arn:aws:ecs:us-east-1:381492311764:task-definition/github-actions-site
          container-name: github-actions-site
          image: averaacademy/github-actions-site:${{ needs.build.outputs.versao }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: service-github-actions
          cluster: avera-githubactions-cluster
          wait-for-service-stability: true
